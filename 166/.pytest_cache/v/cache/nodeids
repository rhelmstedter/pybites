[
  "test_ini.py::test_tox_ini_parser[# Tox (https://tox.readthedocs.io/) is a tool for running tests in multiple\\n# virtualenvs. This configuration file helps to run the test suite on all\\n# supported Python versions. To use it, \"pip install tox\" and then run \"tox\"\\n# from this directory.\\n#\\n# copied from: https://github.com/django/django/blob/master/tox.ini\\n\\n[tox]\\nskipsdist = true\\nenvlist =\\n    py3\\n    flake8\\n    docs\\n    isort\\n\\n# Add environment to use the default python3 installation\\n[testenv:py3]\\nbasepython = python3\\n\\n[testenv]\\nusedevelop = true\\npassenv = DJANGO_SETTINGS_MODULE PYTHONPATH HOME DISPLAY\\nsetenv =\\n    PYTHONDONTWRITEBYTECODE=1\\ndeps =\\n    py{3,35,36,37}: -rtests/requirements/py3.txt\\n    postgres: -rtests/requirements/postgres.txt\\n    mysql: -rtests/requirements/mysql.txt\\n    oracle: -rtests/requirements/oracle.txt\\nchangedir = tests\\ncommands =\\n    {envpython} runtests.py {posargs}\\n\\n[testenv:flake8]\\nbasepython = python3\\nusedevelop = false\\ndeps = flake8\\nchangedir = {toxinidir}\\ncommands = flake8 .\\n\\n[testenv:docs]\\nbasepython = python3\\nusedevelop = false\\nwhitelist_externals =\\n    make\\ndeps =\\n    Sphinx\\n    pyenchant\\n    sphinxcontrib-spelling\\nchangedir = docs\\ncommands =\\n    make spelling\\n\\n[testenv:isort]\\nbasepython = python3\\nusedevelop = false\\ndeps = isort\\nchangedir = {toxinidir}\\ncommands = isort --recursive --check-only --diff django tests scripts\\n\\n[testenv:javascript]\\nusedevelop = false\\ndeps =\\nchangedir = {toxinidir}\\nwhitelist_externals = npm\\ncommands =\\n    npm install\\n    npm test-7-envs1-base_pys1]",
  "test_ini.py::test_tox_ini_parser[[tox]\\nenvlist = py27, py34, py35, py36, pypy, flake8\\n\\n[testenv]\\npassenv = LC_ALL, LANG, HOME\\ncommands = pytest --cov=cookiecutter {posargs:tests}\\ndeps = -rtest_requirements.txt\\n\\n[testenv:flake8]\\ndeps =\\n    flake8==3.5.0\\ncommands =\\n    flake8 cookiecutter tests setup.py\\n\\n[testenv:cov-report]\\ncommands = pytest --cov=cookiecutter --cov-report=term --cov-report=html-4-envs0-base_pys0]",
  "test_ini.py::test_tox_ini_parser[[tox]\\nenvlist =\\n    lint,\\n    py34,py35,py36,py37,pypy3,\\n    docs,py36-cover,coverage,\\n\\n[testenv]\\ncommands =\\n    cover: coverage run     {envbindir}/nosetests --with-xunit --xunit-file=...\\nextras =\\n    testing\\ndeps =\\n    cover: coverage\\nsetenv =\\n    COVERAGE_FILE=.coverage.{envname}\\n\\n[testenv:lint]\\nskip_install = true\\nbasepython = python3.6\\ncommands =\\n    flake8 src/pyramid tests setup.py\\n    black --check --diff src/pyramid tests setup.py\\n    python setup.py check -r -s -m\\n    check-manifest\\ndeps =\\n    flake8\\n    black\\n    readme_renderer\\n    check-manifest\\n\\n[testenv:docs]\\n# pin to 3.5 to match what RTD uses\\nbasepython = python3.5\\nwhitelist_externals = make\\ncommands =\\n    make -C docs doctest html epub BUILDDIR={envdir} \"SPHINXOPTS=-W -E\"\\nextras =\\n    docs\\n\\n[testenv:pdf]\\nbasepython = python3.5\\nwhitelist_externals = make\\ncommands =\\n    make -C docs latexpdf BUILDDIR={envdir} \"SPHINXOPTS=-W -E\"\\nextras =\\n    docs\\n\\n[testenv:coverage]\\nskip_install = true\\nbasepython = python3.6\\ncommands =\\n    coverage combine\\n    coverage xml\\n    coverage report --fail-under=100\\ndeps =\\n    coverage\\nsetenv =\\n    COVERAGE_FILE=.coverage\\n\\n[testenv:black]\\nskip_install = true\\nbasepython = python3.6\\ncommands =\\n    black src/pyramid tests setup.py\\ndeps =\\n    black\\n\\n[testenv:build]\\nskip_install = true\\nbasepython = python3.6\\ncommands =\\n    # clean up build/ and dist/ folders\\n    python -c 'import shutil; shutil.rmtree(\"dist\", ignore_errors=True)'\\n    python setup.py clean --all\\n    # build sdist\\n    python setup.py sdist --dist-dir {toxinidir}/dist\\n    # build wheel from sdist\\n    pip wheel -v --no-deps --no-index --no-build-isolation ...\\ndeps =\\n    setuptools\\n    wheel-8-envs2-base_pys2]",
  "test_ini.py::test_tox_ini_parser[[tox]\\nminversion=2.3.1\\nenvlist = py27,py33,py34,py35,py36,flake8,linters,docs\\n\\n[testenv]\\ndeps =\\n    mock>=2.0.0\\n    pytest!=3.0.5\\n    coverage\\ncommands =\\n    coverage run --parallel-mode -m pytest {posargs}\\n    coverage combine\\n    coverage report -m\\n\\n[testenv:venv]\\ndeps =\\n    .\\ncommands = {posargs}\\n\\n# Linters\\n[testenv:flake8]\\nbasepython = python3\\nskip_install = true\\ndeps =\\n    flake8\\n    flake8-docstrings>=0.2.7\\n    flake8-import-order>=0.9\\ncommands =\\n    flake8 src/oeuvre/ tests/ setup.py\\n\\n[testenv:pylint]\\nbasepython = python3\\nskip_install = true\\ndeps =\\n    pyflakes\\n    pylint\\ncommands =\\n    pylint src/oeuvre\\n\\n[testenv:doc8]\\nbasepython = python3\\nskip_install = true\\ndeps =\\n    sphinx\\n    doc8\\ncommands =\\n    doc8 docs/source/\\n\\n[testenv:bandit]\\nbasepython = python3\\nskip_install = true\\ndeps =\\n    bandit\\ncommands =\\n    bandit -r src/oeuvre/ -c .bandit.yml\\n\\n[testenv:linters]\\nbasepython = python3\\nskip_install = true\\ndeps =\\n    {[testenv:flake8]deps}\\n    {[testenv:pylint]deps}\\n    {[testenv:doc8]deps}\\n    {[testenv:readme]deps}\\n    {[testenv:bandit]deps}\\ncommands =\\n    {[testenv:flake8]commands}\\n    {[testenv:pylint]commands}\\n    {[testenv:doc8]commands}\\n    {[testenv:readme]commands}\\n    {[testenv:bandit]commands}\\n\\n# Documentation\\n[testenv:docs]\\nbasepython = python3\\ndeps =\\n    sphinx>=1.3.0\\n    sphinx_rtd_theme\\ncommands =\\n    sphinx-build -E -W -c docs/source/ -b html docs/source/ docs/build/html\\n    sphinx-build -E -W -c docs/source/ -b man docs/source/ docs/build/man\\n\\n[testenv:serve-docs]\\nbasepython = python3\\nskip_install = true\\nchangedir = docs/build/html\\ndeps =\\ncommands =\\n    python -m http.server {posargs}\\n\\n[testenv:readme]\\nbasepython = python3\\ndeps =\\n    readme_renderer\\ncommands =\\n    python setup.py check -r -s\\n\\n# Release tooling\\n[testenv:build]\\nbasepython = python3\\nskip_install = true\\ndeps =\\n    wheel\\n    setuptools\\ncommands =\\n    python setup.py -q sdist bdist_wheel\\n\\n[testenv:release]\\nbasepython = python3\\nskip_install = true\\ndeps =\\n    {[testenv:build]deps}\\n    twine >= 1.5.0\\ncommands =\\n    {[testenv:build]commands}\\n    twine upload --skip-existing dist/*\\n\\n# Flake8 Configuration\\n[flake8]\\n# Ignore some flake8-docstrings errors\\nignore = D203\\nexclude =\\n    .tox,\\n    .git,\\n    __pycache__,\\n    docs/source/conf.py,\\n    build,\\n    dist,\\n    *.pyc,\\n    *.egg-info,\\n    .cache,\\n    .eggs\\nmax-complexity = 10\\nimport-order-style = google\\napplication-import-names = oeuvre-14-envs3-base_pys3]"
]